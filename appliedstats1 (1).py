# -*- coding: utf-8 -*-
"""AppliedStats1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_BcAf3hvzAkEQqxPlrlWL1oWUWKW4Cms
"""

#Applied Statistics Lab Experiments
#Creating series from array through pandas and numpy
import numpy as np
import pandas as pd

"""# EXPERIMENT 1"""

#Converting to series
arr=np.array(['P','A','B','c','d'])
sr=pd.Series(arr)
print(sr)

#Creating a data frame using list
#creating a list
a=['Meemansa','Sharma']
#Creating a dataframe from list
df=pd.DataFrame(a)
print(df)

#Usimg Pandas map function
a=pd.Series(['meemansa','sharma','aniruddh','beena'])
a.map({'meemansa':True,'beena':True  })

#One more example
a=pd.Series(["Meemansa","Beena","Aniruddh"])
a.map({"Meemansa":"Mother"})
a.map("I like {}".format,na_action="ignore")

#Creating series toframe
sr=pd.Series(["a","c","d"])
name="value"
sr.to_frame()

#One more example
import matplotlib.pyplot as plt
abc=["apple","mango","grapes"]
id=[100,101,103]
abc_series=pd.Series(abc)
id_series=pd.Series(id)
frame={"FRUITS":abc_series,"ID":id_series}
result=pd.DataFrame(frame)
print(result)

"""# EXPERIMENT 2"""

#Experiment number 2
df=pd.DataFrame()
print(df)



#Creating a data frame through a list
list=["apple","Banana","Grapes"]
df=pd.DataFrame(list)
print(df)

#Creating a data frame through dictionary
dictionary={'ID':[100,101,103],"Department":["Btech","Bsc","Mtech"]}
df=pd.DataFrame(dictionary)
print(df)

series = {'one': pd.Series([1,2,3,4,5],index=["a","b","c","d","e"]),
         'two': pd.Series([1,2,3,4,5,6],index=["a","b","c","d","e","f"])}
df = pd.DataFrame(series)
print(df)

sr = {"one":pd.Series([1,2,3,4,5,6],index=["a","b","c","d","E","F"]),"two":pd.Series([1,2,3,4,5,6,7],index=["a","b","c","d","e","f","g"])}
df = pd.DataFrame(sr)
print(df)

#Adding new column to an existing data frame
sr={'one':pd.Series([1,2,3],index=["a","b","c"]),"two":pd.Series([1,2,3,4,5,6],index=["a","b","c","d","e","f"])}
df=pd.DataFrame(sr)
print("add new column to the dataframe by passing a column")
df["three"]=pd.Series([20,40,60],index=["a","b","c"])
print(df)
print("Add new column")
df["four"]=df["one"]+df["three"]
print(df)

#Column deletion
sr={"two":pd.Series([1,2],index=["a","b"]),"three":pd.Series([1,2,3],index=["a","b","c"])}
df=pd.DataFrame(sr)
print("The data frame")
print(df)
#Using tyhe delete function
print("Deleting the first column")
del df['two']
print(df)
#Using the pop function
df.pop("three")
print(df)

sr={"one":pd.Series([1,2,3,4,5],index=["a","b","c","d","e"]),"two": pd.Series([1,2,3,4],index=["a","b","c","d"])}
df=pd.DataFrame(sr)
print(df.loc['b'])

sr={"one":pd.Series([1,2,3,4],index=["a","b","c","d"]),"two":pd.Series([1,2,3,4,5],index=["a","b","c","d","e"])}
df=pd.DataFrame(sr)
print(df.iloc[3])

info={"one":pd.Series([1,2,3,4],index=["a","b","c","d"]),"two":pd.Series([1,2,3],index=["a","b","c"])}
df=pd.DataFrame(sr)
print(df[2:5])



"""# Exercise 7

"""

import array
arr=array.array('I',[1,2,3,4,5,6])
print("newly created array:",end=" ")
for i in range (0,5):
  print(arr[i],end = " ")
  print("\r")

dict={"name":["meemansa","aniruddh","harsh","ayush"]}
df=pd.DataFrame(dict,index=["row1","row2","row3","row4"])
print(df)

arr = np.arange(16)
print("The original array is :\n",arr)
#shape of array with 2 rows and 8 columns
arr = np.arange(16).reshape(2,8)
print("\n reshape the array:\n",arr)
#shape the array with 2 rows and 8 columns
arr = np.arange(16).reshape(8,2)
print("\n reshape array:\n",arr)



"""# EXERCISE 8

"""

a= np.array([1,2,3])
print(type(a))
print(a.shape)

print(a[0],a[1],a[2])
a[0]=5
print(a)
b = np.array([[1,2,3],[4,5,6]])
print(b.shape)
print(b[0,0],b[0,1],b[1,0])

a= np.zeros((2,2))#zero is used for missing values
print(a)
b= np.ones((1,2))
print(b)
c=np.full((2,2),7)#to create a 2*2 matrix
print(c)
d=np.eye((2))#to make a 2*2 identity matrix
print(d)
e=np.full((2,2),fill_value=0)
print(c)

